// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String   // Hashed
  bio          String?
  avatarUrl    String?
  skillsOffered Skill[] @relation("SkillsOffered")
  skillsWanted  Skill[] @relation("SkillsWanted")
  sessionsAsMentor Session[] @relation("MentorSessions")
  sessionsAsLearner Session[] @relation("LearnerSessions")
  createdAt    DateTime @default(now())
}

model Skill {
  id        String  @id @default(uuid())
  name      String
  category  String?
  offeredBy User[]  @relation("SkillsOffered")
  wantedBy  User[]  @relation("SkillsWanted")
}

model Session {
  id          String   @id @default(uuid())
  mentor      User     @relation("MentorSessions", fields: [mentorId], references: [id])
  mentorId    String
  learner     User     @relation("LearnerSessions", fields: [learnerId], references: [id])
  learnerId   String
  skill       String   // e.g., "JavaScript"
  scheduledAt DateTime
  status      SessionStatus @default(PENDING)
  feedback    String?
  createdAt   DateTime @default(now())
}

enum SessionStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}
